<?xml version="1.0" encoding="utf-8" ?>
<castle>
  <facilities>
    <facility id="loggingfacility" configfile="config\log4net.config" loggingapi="ExtendedLog4net" type="Castle.Facilities.Logging.LoggingFacility, Castle.Facilities.Logging"/>
    <facility id="nhibernate" isWeb="false" type="Castle.Facilities.NHibernateIntegration.NHibernateFacility, Castle.Facilities.NHibernateIntegration" configurationBuilder="Alfa.Core.Mapper.FluentNHibernateConfigurationBuilder, Alfa.Core">
      <factory id="nhibernate.factory">
        <settings>
          <item key="show_sql">true</item>
          <item key="connection.provider">NHibernate.Connection.DriverConnectionProvider</item>
          <item key="connection.driver_class">NHibernate.Driver.SqlClientDriver</item>
          <item key="dialect">NHibernate.Dialect.MsSql2005Dialect</item>
          <item key="connection.connection_string">Data Source=.\SQLEXPRESS;Initial Catalog=Quimio;Integrated Security=True</item>
          <item key="proxyfactory.factory_class">NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</item>
        </settings>
      </factory>
    </facility>
  </facilities>
  <components>
    <component id="meddlinginterceptor" service="Castle.DynamicProxy.IInterceptor, Castle.Core" type="Alfa.Core.AOP.Interceptor, Alfa.Core.AOP"/>
    <component id="generic.repository" service="Alfa.Core.Repository.IRepository`1, Alfa.Core" type="Alfa.Core.Repository.NHibernateRepository`1, Alfa.Core" lifestyle="transient">
      <interceptors>
        <interceptor>${meddlinginterceptor}</interceptor>
      </interceptors>
    </component>
    <component id="unitOfWork" service="Alfa.Core.Unit.IUnitOfWork, Alfa.Core" type="Alfa.Core.Unit.UnitOfWork, Alfa.Core" lifestyle="PerWebRequest">
      <interceptors>
        <interceptor>${meddlinginterceptor}</interceptor>
      </interceptors>
    </component>
    <component id="message" service="Alfa.Core.Exception.IHandlerMessage, Alfa.Core" type="Alfa.Core.Web.HandlerMessage, Alfa.Core.Web" lifestyle="PerWebRequest"/>

    <!--services-->

    <!--rules-->

  </components>
</castle>